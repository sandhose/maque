#!/bin/sh

# Default options
OPTS_MAKEFILE=`find . -name [Mm]akefile -maxdepth 1`
OPTS_DRYRUN=false
OPTS_KEEPGOING=false

# Show usage
usage () {
    cat <<EOL
Usage: $(basename $0) [-f makefile] [-hkn] [target]
Options:
    -f FILE       Read FILE as a makefile
    -h            Print this message and exit.
    -k            Keep going when some targets can't be made.
    -n            Don't actually run any commands; just print them
EOL
}

# Create tempdir
init_tmpdir () {
    # Uses TMPDIR (fallback: /tmp)
    # ex: /tmp/maque-1234
    TDIR=${TMPDIR:-/tmp/}$(basename $0)-$$
    mkdir -p $TDIR
    trap "rm -r $TDIR" EXIT
}

# Parse commandline options
parse_commandline () {
    while getopts ":f:kn" ARG; do
        case "$ARG" in
            h)  usage
                exit 0
                ;;
            f)  OPTS_MAKEFILE=$OPTARG
                ;;
            k)  OPTS_KEEPGOING=true
                ;;
            n)  OPTS_DRYRUN=true
                ;;
            \?) echo "Invalid option -$OPTARG"
                ;;
            *)  echo "$OPTERR"
                ;;
        esac
    done

    # Testing makefile existence
    if [ ! -f $OPTS_MAKEFILE ]; then
        echo "Makefile not found"
        usage >&2
        exit 1
    fi

}

# Parse makefile
parse_makefile () {
    CURRENT_TARGET=""

    # Remove comments, trailing whitespaces and empty lines
    MK_CONTENT=`cat $1 | sed -e 's/#.*$//g' -e 's/[[:space:]]*$//' | grep -ve '^[[:space:]]*$'`

    # Keep leading spaces/tabs in `read`
    OLDIFS=$IFS
    IFS=''

    echo $MK_CONTENT | while read LINE; do
        if [ ! -z $CURRENT_TARGET ] && (echo "$LINE" | grep -q ^'\t'); then
            # Append commands to $CURRENT_TARGET commands file
            echo "$LINE" | sed 's/^[[:space:]]*\(.*\)$/\1/' >> $TDIR/$CURRENT_TARGET/commands
        elif (echo "$LINE" | grep -q '^[A-Za-z.]\+:\( [A-Za-z.]\+\)*$'); then
            # Change $CURRENT_TARGET and add dependencies in file
            CURRENT_TARGET=`echo $LINE | cut -d ':' -f 1`
            mkdir $TDIR/$CURRENT_TARGET
            touch $TDIR/$CURRENT_TARGET/commands
            echo "$LINE" | sed 's/^[A-Za-z.]*: *//g' > $TDIR/$CURRENT_TARGET/dependencies
        else
            # TODO: More explicit error
            echo "Error while parsing Makefile" >&2
            exit 2
        fi
    done

    # Restore IFS
    IFS=$OLDIFS
}

# Run everything
init_tmpdir
parse_commandline $*
parse_makefile $OPTS_MAKEFILE

# vim: ts=4:sw=4:et
